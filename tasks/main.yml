---
- name: Add Oracle Java apt repository
  apt_repository: repo="ppa:webupd8team/java"

- name: Update apt cache
  apt: update_cache=yes

- name: Install Git
  apt: name=git state=latest

- name: Install python-mysqldb
  apt: name=python-mysqldb state=installed

- name: Accept Oracle License
  debconf: name=oracle-java7-installer question='shared/accepted-oracle-license-v1-1' value='true' vtype='select'

- name: Install Java
  apt: name=oracle-java7-installer state=latest

- name: Install Maven
  apt: name=maven state=latest

- name: Install MySQL
  apt: name=mysql-server state=latest

- name: Update MySQL password
  mysql_user: name=root host={{ item }} password={{ mysql_root_password }} check_implicit_admin=yes
  with_items:
   - 127.0.0.1
   - ::1
   - localhost

- name: Remove anonymous users from MySQL
  mysql_user: name='' host={{ item }} state=absent
  with_items:
    - 127.0.0.1
    - ::1
    - localhost

- name: Remove the test database
  mysql_db: name=test state=absent

- name: Add Watchtower database
  mysql_db: name={{ mysql_database }} state=present

- name: Add Watchtower user
  mysql_user: name={{ mysql_username }} password={{ mysql_password }} host={{ item }} priv=*.*:ALL state=present
  with_items:
    - 127.0.0.1
    - ::1
    - localhost
  notify:
    - Restart MySQL

- name: Download watchtower-common-1.0.1-SNAPSHOT
  git: repo=https://github.com/icclab/watchtower-common.git dest="/home/{{ansible_ssh_user}}/watchtower-common"
  when: not release

- name: Download watchtower-common-1.0.0
  get_url: url=https://github.com/icclab/watchtower-common/archive/1.0.0.tar.gz dest="/home/{{ansible_ssh_user}}/"
  when: release

- name: Unpack watchtower-common-1.0.0
  unarchive: src="/home/{{ansible_ssh_user}}/watchtower-common-1.0.0.tar.gz" dest="/home/{{ansible_ssh_user}}/" copy=no
  when: release

- name: Install watchtower-common
  command: mvn clean install
  args:
    chdir: "/home/{{ansible_ssh_user}}/watchtower-common"

- name: Download watchtower-monitoring-1.0.1-SNAPSHOT
  git: repo=https://github.com/icclab/watchtower-monitoring.git dest="/home/{{ansible_ssh_user}}/watchtower-monitoring"
  when: not release

- name: Download watchtower-monitoring-1.0.0
  get_url: url=https://github.com/icclab/watchtower-monitoring/archive/1.0.0.tar.gz dest="/home/{{ansible_ssh_user}}/"
  when: release

- name: Unpack watchtower-monitoring-1.0.0
  unarchive: src="/home/{{ansible_ssh_user}}/watchtower-monitoring-1.0.0.tar.gz" dest="/home/{{ansible_ssh_user}}/" copy=no
  when: release

- name: Package watchtower-monitoring
  command: mvn clean package
  args:
    chdir: "/home/{{ansible_ssh_user}}/watchtower-monitoring"

- name: Install watchtower-monitoring
  apt: deb="/home/{{ansible_ssh_user}}/watchtower-monitoring/debs/binaries/watchtower-monitoring-1.0.1-SNAPSHOT.deb"

- name: Setup watchtower-monitoring
  command: mv /etc/watchtower/monitoring-config.yml-sample /etc/watchtower/monitoring-config.yml
  notify:
    - Restart watchtower-monitoring

- name: Download watchtower-workflow-1.0.1-SNAPSHOT
  git: repo=https://github.com/icclab/watchtower-workflow.git dest="/home/{{ansible_ssh_user}}/watchtower-workflow"
  when: not release

- name: Download watchtower-workflow-1.0.0
  get_url: url=https://github.com/icclab/watchtower-workflow/archive/1.0.0.tar.gz dest="/home/{{ansible_ssh_user}}/"
  when: release

- name: Unpack watchtower-workflow-1.0.0
  unarchive: src="/home/{{ansible_ssh_user}}/watchtower-workflow-1.0.0.tar.gz" dest="/home/{{ansible_ssh_user}}/" copy=no
  when: release

- name: Package watchtower-workflow
  command: mvn clean package
  args:
    chdir: "/home/{{ansible_ssh_user}}/watchtower-workflow"

- name: Install watchtower-workflow
  apt: deb="/home/{{ansible_ssh_user}}/watchtower-workflow/debs/binaries/watchtower-workflow-1.0.1-SNAPSHOT.deb"

- name: Setup watchtower-workflow
  command: mv /etc/watchtower/workflow-config.yml-sample /etc/watchtower/workflow-config.yml
  notify:
    - Restart watchtower-workflow

- name: Download watchtower-automation-1.0.1-SNAPSHOT
  git: repo=https://github.com/icclab/watchtower-automation.git dest="/home/{{ansible_ssh_user}}/watchtower-automation"
  when: not release

- name: Download watchtower-automation-1.0.0
  get_url: url=https://github.com/icclab/watchtower-automation/archive/1.0.0.tar.gz dest="/home/{{ansible_ssh_user}}/"
  when: release

- name: Unpack watchtower-automation-1.0.0
  unarchive: src="/home/{{ansible_ssh_user}}/watchtower-automation-1.0.0.tar.gz" dest="/home/{{ansible_ssh_user}}/" copy=no
  when: release

- name: Package watchtower-automation
  command: mvn clean package
  args:
    chdir: "/home/{{ansible_ssh_user}}/watchtower-automation"

- name: Install watchtower-automation
  apt: deb="/home/{{ansible_ssh_user}}/watchtower-automation/debs/binaries/watchtower-automation-1.0.1-SNAPSHOT.deb"

- name: Setup watchtower-automation
  command: mv /etc/watchtower/automation-config.yml-sample /etc/watchtower/automation-config.yml
  notify:
    - Restart watchtower-automation

- name: Download Rundeck
  get_url: url=http://dl.bintray.com/rundeck/rundeck-deb/rundeck-2.5.0-1-GA.deb dest="/home/{{ansible_ssh_user}}/"

- name: Install Rundeck
  apt: deb="/home/{{ansible_ssh_user}}/rundeck-2.5.0-1-GA.deb"
  notify:
    - Restart Rundeck

- name: Download Camunda
  get_url: url=http://camunda.org/release/camunda-bpm/tomcat/7.3/camunda-bpm-tomcat-7.3.0-alpha3.tar.gz dest="/home/{{ansible_ssh_user}}/"

- name: Create Camunda directory
  file: path="/home/{{ansible_ssh_user}}/camunda" state=directory

- name: Unpack Camunda
  unarchive: src="/home/{{ansible_ssh_user}}/camunda-bpm-tomcat-7.3.0-alpha3.tar.gz" dest="/home/{{ansible_ssh_user}}/camunda" copy=no

- name: Start Camunda
  shell: "/home/{{ansible_ssh_user}}/camunda/start-camunda.sh >> camunda.txt"

- name: Download watchtower-workflow-camunda-1.0.1-SNAPSHOT
  git: repo=https://github.com/icclab/watchtower-workflow-camunda.git dest="/home/{{ansible_ssh_user}}/watchtower-workflow-camunda"
  when: not release

- name: Download watchtower-workflow-camunda-1.0.0
  get_url: url=https://github.com/icclab/watchtower-workflow-camunda/archive/1.0.0.tar.gz dest="/home/{{ansible_ssh_user}}/"
  when: release

- name: Unpack watchtower-workflow-camunda-1.0.0
  unarchive: src="/home/{{ansible_ssh_user}}/watchtower-workflow-camunda-1.0.0.tar.gz" dest="/home/{{ansible_ssh_user}}/" copy=no
  when: release

- name: Setup watchtower-workflow-camunda MySQL database
  replace: dest="/home/{{ansible_ssh_user}}/watchtower-workflow-camunda/src/main/resources/META-INF/persistence.xml" regexp="%database%" replace="{{ mysql_database }}"

- name: Setup watchtower-workflow-camunda MySQL username
  replace: dest="/home/{{ansible_ssh_user}}/watchtower-workflow-camunda/src/main/resources/META-INF/persistence.xml" regexp="%username%" replace="{{ mysql_username }}"

- name: Setup watchtower-workflow-camunda MySQL password
  replace: dest="/home/{{ansible_ssh_user}}/watchtower-workflow-camunda/src/main/resources/META-INF/persistence.xml" regexp="%password%" replace="{{ mysql_password }}"

- name: Package watchtower-workflow-camunda
  command: mvn clean install
  args:
    chdir: "/home/{{ansible_ssh_user}}/watchtower-workflow-camunda"

- name: Install watchtower-workflow-camunda
  command: mv "/home/{{ansible_ssh_user}}/watchtower-workflow-camunda/target/watchtower-workflow-camunda.war" "/home/{{ansible_ssh_user}}/camunda/server/apache-tomcat-7.0.50/webapps/"
